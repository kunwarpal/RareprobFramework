// Generated by Dagger (https://dagger.dev).
package com.rareprob.core_pulgin.payment.in_app_purchase.presentation;

import android.app.Application;
import com.rareprob.core_pulgin.core.base.CoreDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InAppPurchaseViewModel_Factory implements Factory<InAppPurchaseViewModel> {
  private final Provider<Application> applicationProvider;

  private final Provider<CoreDatabase> coreDatabaseProvider;

  public InAppPurchaseViewModel_Factory(Provider<Application> applicationProvider,
      Provider<CoreDatabase> coreDatabaseProvider) {
    this.applicationProvider = applicationProvider;
    this.coreDatabaseProvider = coreDatabaseProvider;
  }

  @Override
  public InAppPurchaseViewModel get() {
    return newInstance(applicationProvider.get(), coreDatabaseProvider.get());
  }

  public static InAppPurchaseViewModel_Factory create(Provider<Application> applicationProvider,
      Provider<CoreDatabase> coreDatabaseProvider) {
    return new InAppPurchaseViewModel_Factory(applicationProvider, coreDatabaseProvider);
  }

  public static InAppPurchaseViewModel newInstance(Application application,
      CoreDatabase coreDatabase) {
    return new InAppPurchaseViewModel(application, coreDatabase);
  }
}
